export declare const PaginationProps: () => {
    total: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    defaultCurrent: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    current: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    defaultPageSize: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    pageSize: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    hideOnSinglePage: import("vue-types").VueTypeValidableDef<boolean>;
    showSizeChanger: import("vue-types").VueTypeValidableDef<boolean>;
    pageSizeOptions: import("vue-types").VueTypeDef<import("../_util/type").Key[]>;
    buildOptionText: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    showSizeChange: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    showQuickJumper: import("vue-types").VueTypeDef<boolean | {
        [key: string]: any;
    }>;
    showTotal: import("vue-types").VueTypeValidableDef<any>;
    size: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    simple: import("vue-types").VueTypeValidableDef<boolean>;
    locale: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    selectPrefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    itemRender: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    role: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    showLessItems: import("vue-types").VueTypeValidableDef<boolean>;
};
export declare const PaginationConfig: () => {
    position: import("vue-types").VueTypeDef<"both" | "bottom" | "top">;
    total: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    defaultCurrent: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    current: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    defaultPageSize: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    pageSize: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    hideOnSinglePage: import("vue-types").VueTypeValidableDef<boolean>;
    showSizeChanger: import("vue-types").VueTypeValidableDef<boolean>;
    pageSizeOptions: import("vue-types").VueTypeDef<import("../_util/type").Key[]>;
    buildOptionText: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    showSizeChange: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    showQuickJumper: import("vue-types").VueTypeDef<boolean | {
        [key: string]: any;
    }>;
    showTotal: import("vue-types").VueTypeValidableDef<any>;
    size: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    simple: import("vue-types").VueTypeValidableDef<boolean>;
    locale: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    selectPrefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    itemRender: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    role: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    showLessItems: import("vue-types").VueTypeValidableDef<boolean>;
};
declare const _default: import("vue").DefineComponent<{
    total: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    defaultCurrent: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    current: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    defaultPageSize: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    pageSize: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    };
    hideOnSinglePage: import("vue-types").VueTypeValidableDef<boolean>;
    showSizeChanger: import("vue-types").VueTypeValidableDef<boolean>;
    pageSizeOptions: import("vue-types").VueTypeDef<import("../_util/type").Key[]>;
    buildOptionText: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    showSizeChange: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    showQuickJumper: import("vue-types").VueTypeDef<boolean | {
        [key: string]: any;
    }>;
    showTotal: import("vue-types").VueTypeValidableDef<any>;
    size: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    simple: import("vue-types").VueTypeValidableDef<boolean>;
    locale: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    selectPrefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    itemRender: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    role: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    showLessItems: import("vue-types").VueTypeValidableDef<boolean>;
}, {
    configProvider: import("../config-provider").ConfigConsumerProps;
}, unknown, {}, {
    getIconsProps(prefixCls: string): {
        prevIcon: JSX.Element;
        nextIcon: JSX.Element;
        jumpPrevIcon: JSX.Element;
        jumpNextIcon: JSX.Element;
    };
    renderPagination(contextLocale: object): JSX.Element;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    locale: {
        [key: string]: any;
    };
    prefixCls: string;
    role: string;
    current: number;
    size: string;
    total: number;
    defaultCurrent: number;
    defaultPageSize: number;
    pageSize: number;
    buildOptionText: (...args: any[]) => any;
    showSizeChange: (...args: any[]) => any;
    selectPrefixCls: string;
    itemRender: (...args: any[]) => any;
} & {
    disabled?: boolean;
    hideOnSinglePage?: boolean;
    showSizeChanger?: boolean;
    pageSizeOptions?: import("../_util/type").Key[];
    showQuickJumper?: boolean | {
        [key: string]: any;
    };
    showTotal?: any;
    simple?: boolean;
    showLessItems?: boolean;
}>, {
    locale: {
        [key: string]: any;
    };
    prefixCls: string;
    role: string;
    current: number;
    size: string;
    total: number;
    defaultCurrent: number;
    defaultPageSize: number;
    pageSize: number;
    buildOptionText: (...args: any[]) => any;
    showSizeChange: (...args: any[]) => any;
    selectPrefixCls: string;
    itemRender: (...args: any[]) => any;
}>;
export default _default;
